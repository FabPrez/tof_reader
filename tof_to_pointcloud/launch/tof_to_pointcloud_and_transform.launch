<launch>
    <arg name="tof_id" default="1" />
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="0" />
    <arg name="qx" default="0.0" />
    <arg name="qy" default="0.0" />
    <arg name="qz" default="0.0" />
    <arg name="qw" default="1.0" />
    <arg name="frame_id" default="world" />
    <arg name="continuous_mode" default="false" />

    <!-- to be deleted -->
    <arg name="tof_simulated" default="false" />

    <arg name="input_topic" value="/simulated_tof/depth/points" if="$(arg tof_simulated)" />
    <arg name="input_topic" value="/tof_raw_pointcloud_data$(arg tof_id)" unless="$(arg tof_simulated)" />

    <!-- Nodo per la conversione a PointCloud per il ToF -->
    <node pkg="tof_to_pointcloud" name="tof_to_pointcloud_node_$(arg tof_id)"
        type="tof_to_pointcloud" output="screen">
        <param name="input_topic" value="$(arg input_topic)" />
        <param name="output_topic" value="/tof_pointcloud_data$(arg tof_id)" />
        <param name="frame_id" value="tof_frame$(arg tof_id)" />
        <param name="continuous_mode" value="$(arg continuous_mode)" />
        <param name="service_name" value="/start_acquisition_tof$(arg tof_id)" />
        <param name="tof_simulated" value="$(arg tof_simulated)" />
    </node>

    <!-- Nodo per la trasformazione statica per il ToF -->
    <node pkg="tf" type="static_transform_publisher" name="my_static_tf_publisher_$(arg tof_id)"
        args="$(arg x) $(arg y) $(arg z) $(arg qx) $(arg qy) $(arg qz) $(arg qw) $(arg frame_id) tof_frame$(arg tof_id) 10" />
</launch>